# arara, the cool TeX automation tool
# Copyright (c) 2012, Paulo Roberto Massa Cereda
# All rights reserved.
#
# Redistribution and  use in source  and binary forms, with  or without
# modification, are  permitted provided  that the  following conditions
# are met:
#
# 1. Redistributions  of source  code must  retain the  above copyright
# notice, this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form  must reproduce the above copyright
# notice, this list  of conditions and the following  disclaimer in the
# documentation and/or other materials provided with the distribution.
#
# 3. Neither  the name  of the  project's author nor  the names  of its
# contributors may be used to  endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS  PROVIDED BY THE COPYRIGHT  HOLDERS AND CONTRIBUTORS
# "AS IS"  AND ANY  EXPRESS OR IMPLIED  WARRANTIES, INCLUDING,  BUT NOT
# LIMITED  TO, THE  IMPLIED WARRANTIES  OF MERCHANTABILITY  AND FITNESS
# FOR  A PARTICULAR  PURPOSE  ARE  DISCLAIMED. IN  NO  EVENT SHALL  THE
# COPYRIGHT HOLDER OR CONTRIBUTORS BE  LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY,  OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT  NOT LIMITED  TO, PROCUREMENT  OF SUBSTITUTE  GOODS OR  SERVICES;
# LOSS  OF USE,  DATA, OR  PROFITS; OR  BUSINESS INTERRUPTION)  HOWEVER
# CAUSED AND  ON ANY THEORY  OF LIABILITY, WHETHER IN  CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
# WAY  OUT  OF  THE USE  OF  THIS  SOFTWARE,  EVEN  IF ADVISED  OF  THE
# POSSIBILITY OF SUCH DAMAGE.
#
# Messages: This file holds the default <LANGUAGE> messages for arara.
#
# author: <TRANSLATOR NAME>
# e-mail: <TRANSLATOR E-MAIL> 

# Log_WelcomeMessage = Welcome to arara {0}!
Log_WelcomeMessage = 

# Log_ProcessingFile = Processing file ''{0}'', please wait.
Log_ProcessingFile = 

# Log_Done = Done.
Log_Done = 

# Log_ExceptionRaised = Arara raised an exception with the following message:
Log_ExceptionRaised = 

# Log_ReadyToRunCommands = Ready to run commands.
Log_ReadyToRunCommands = 

# Log_CommandName = Running ''{0}''.
Log_CommandName = 

# Log_Command = Command: {0}
Log_Command = 

# Log_CommandSuccess = ''{0}'' was successfully executed.
Log_CommandSuccess = 

# Log_CommandFailure = ''{0}'' returned an error status.
Log_CommandFailure = 

# Log_AllCommandsSuccess = All commands were successfully executed.
Log_AllCommandsSuccess = 

# Log_OutputLogging = Output logging:
Log_OutputLogging = 

# Log_CommandNotFound = ''{0}'' was not found in the path. Execution attempt: {1}
Log_CommandNotFound = 

# Log_DirectiveFound = Directive found in line {0} with {1}.
Log_DirectiveFound = 

# Log_RuleFound = Task ''{0}'' found in ''{1}''.
Log_RuleFound = 

# Log_NoDirectivesFound = No directives found in ''{0}''.
Log_NoDirectivesFound = 

# Help_Version = print the application version
Help_Version = 

# Help_Help = print the help message
Help_Help = 

# Help_Log = generate a log output
Help_Log = 

# Help_Verbose = print the command output
Help_Verbose = 

# Help_Timeout = set the execution timeout (in milliseconds)
Help_Timeout = 

# Help_Language = set the application language
Help_Language = 

# Help_DryRun = go through all the motions of running a command, but with no actual calls
Help_DryRun =

# Help_MaximumNumberOfLoops = set the maximum number of loops
Help_MaximumNumberOfLoops =

# Header_Slogan = The cool TeX automation tool
Header_Slogan = 

# Header_AllRightsReserved = All rights reserved.
Header_AllRightsReserved = 

# Msg_NoDirectivesFound = I didn''t find any directives in ''{0}'', and so didn''t do anything. Is that what you really wanted?
Msg_NoDirectivesFound = 

# Msg_SpecialThanks = A special thanks goes to Alan Munn, Andrew Stacey, Brent Longborough, Christopher Hughes, Clemens Niederberger, David Carlisle, Enrico Gregorio, Francesco Endrici, Gonzalo Medina, Harish Kumar, Heiko Oberdiek, İlhan Polat, Joseph Wright, Marco Daniel, Mikaël Maunier, Nicola Talbot, Patrick Gundlach, Rasmus Roulund, Sergey Ulyanov, Stefan Kottwitz, and many others for making this humble tool possible.
Msg_SpecialThanks = 

# Msg_RunningCommand = Running {0}...
Msg_RunningCommand = 

# Msg_Success = SUCCESS
Msg_Success = 

# Msg_Failure = FAILURE
Msg_Failure = 

# Msg_Status = Status:
Msg_Status = 

# YamlError_Context = Context: {0}
YamlError_Context = 

# YamlError_Problem = Problem: {0}
YamlError_Problem = 

# YamlError_ErrorLocation = Error found in line {0}, column {1}.
YamlError_ErrorLocation = 

# Error_FileDoesNotExistWithExtensionsList = I''m sorry, but the file ''{0} {1}'' does not exist. Note that when you provide only the basename (i.e, the filename without the extension) or with an unknown extension, arara will try to look for files ending with the predefined extensions {1} in that order. You can override the order, the search pattern or even add support for new extensions through the configuration file. Please refer to the arara manual to learn more about this feature.
Error_FileDoesNotExistWithExtensionsList = 

# Error_FileDoesNotExist = File ''{0}'' does not exist.
Error_FileDoesNotExist = 

# Error_CommandNotFound = \nI''m sorry, but the command from the ''{0}'' task could not be found. Are you sure the command ''{1}'' is correct, or even accessible from the system path?
Error_CommandNotFound = 

# Error_InvalidYAMLConfigurationFile = I'm sorry, but apparently your arara configuration file is invalid, that is, it has invalid or missing YAML entries. Unfortunately, arara cannot proceed until the error is fixed. I tried my best to dump the error message, so here it is:
Error_InvalidYAMLConfigurationFile = 

# Error_InvalidConfigurationFile = Uh-oh, the configuration file appears to be invalid. Are you sure it's a proper YAML file? Unfortunately, arara cannot proceed until a proper configuration file is provided.
Error_InvalidConfigurationFile = 

# Error_InvalidLanguageConfigurationFile = Houston, we have a problem. Sadly, the language set in the configuration file is not valid. Currently, arara can provide support for the following languages: {0}. Make sure to choose a valid language or remove the entry from the configuration file (the field is optional), otherwise arara cannot proceed.
Error_InvalidLanguageConfigurationFile = 

# Error_InvalidFiletypesConfigurationFile = I'm sorry, but it seems your configuration file has customized filetypes with neither the extension or pattern defined. Both are required in order to continue. Please fix this error in your configuration file and try again.
Error_InvalidFiletypesConfigurationFile = 

# Error_PathRuntimeErrorConfigurationFile = I''m sorry, but one of the entries of the search path in your configuration file has an unavailable variable in the path context: ''{0}''
Error_PathRuntimeErrorConfigurationFile = 

# Error_PathIOErrorConfigurationFile = I'm sorry, but one of the entries of the search path in your configuration file has a malformed directory structure. Could you take a look at it?
Error_PathIOErrorConfigurationFile = 

# Error_InvalidYAMLDirective = It appears there is a malformed directive found at line {0}, that is, a directive that might have a YAML syntax error or an invalid field. I tried my best to dump the error message, so here it is:
Error_InvalidYAMLDirective = 

# Error_DirectiveEmptyCurlyBrackets = Directive ''{0}'' at line {1} has empty curly brackets. Note that arara opts for a cleaner syntax when a directive has no parameters. To fix it, it''s enough to either remove the curly brackets or provide the arguments for the directive.
Error_DirectiveEmptyCurlyBrackets = 

# Error_DirectiveInvalidArgumentList = Directive ''{0}'' at line {1} has an invalid argument type. The argument ''{2}'' is a reserved arara keyword and always requires a list.
Error_DirectiveInvalidArgumentList = 

# Error_DirectiveReservedKeyword = Directive ''{0}'' at line {1} has an invalid argument name. The name ''{2}'' is a reserved arara keyword representing every element in the ''{3}'' list. Please, pick another name for that argument.
Error_DirectiveReservedKeyword = 

# Error_DirectiveListError = Directive ''{0}'' at line {1} has an invalid argument type. Only the arguments ''files'' and ''items'' can have a list. Both are reserved arara keywords.
Error_DirectiveListError = 

# Error_InvalidDirective = Apparently, there''s an invalid directive at line {0}. Please take a look and fix it.
Error_InvalidDirective = 

# Error_DirectiveGenericError = Directive ''{0}'' at line {1} seems to be malformed. It might be a YAML syntax error or a wrong mapping.
Error_DirectiveGenericError = 

# Error_InvalidLanguage = I'm sorry, but the language code you chose is invalid. Currently, the following languages are supported:
Error_InvalidLanguage = 

# Error_RuleNotFound = Uh-oh, I could not find the ''{0}'' rule in the search path. Could you take a look if the rule name is correct and if the rule is accessible through the search path?
Error_RuleNotFound = 

# Error_InvalidYAMLRule = It appears that the ''{0}'' task has a YAML syntax error or an invalid field. Could you take a look at the ''{0}.yaml'' file located at ''{1}''. I tried my best to dump the error message, so here it is:
Error_InvalidYAMLRule = 

# Error_InvalidRule = Uh-oh, the ''{0}'' task appears to be invalid. Are you sure the ''{0}.yaml'' file located at ''{1}'' is a proper YAML file?
Error_InvalidRule = 

# Error_EmptyIdentifierRule = A problem was detected in the ''{0}'' task. The ''{0}.yaml'' file located at ''{1}'' requires a valid identifier. Could you fix it?
Error_EmptyIdentifierRule = 

# Error_EmptyNameRule = A problem was detected in the ''{0}'' task. The ''{0}.yaml'' file located at ''{1}'' requires a valid name. Could you fix it?
Error_EmptyNameRule = 

# Error_ForbiddenIdentifierRule = Uh-oh, the ''{0}'' task (referencing the ''{0}.yaml'' file located at ''{1}'') has an invalid argument identifier. ''{2}'' is a reserved keyword, so it cannot be used. Could you use another name?
Error_ForbiddenIdentifierRule = 

# Error_EmptyArgumentsListRule = A problem was detected in the ''{0}'' task. The ''{0}.yaml'' file located at ''{1}'' requires a valid list of arguments. Could you fix it? Note that the list of arguments can also be empty, but it is still necessary to define it explicitly (with ''arguments: []'').
Error_EmptyArgumentsListRule = 

# Error_WrongIdentifierRule = Uh-oh, the ''{0}'' task (referencing the ''{0}.yaml'' file located at ''{1}'') has the wrong identifier - ''{0}'' was expected, rather than ''{2}''. Could you fix it?
Error_WrongIdentifierRule = 

# Error_ArgumentsNotDefinedInRule = Oh no, there are arguments used in the diretive ''{0}'' which are not defined in the ''{0}.yaml'' rule located at ''{1}''. You can either remove them from the ''{0}'' directive or add them to the list of arguments in the ''{0}.yaml'' rule. Here they are: {2}
Error_ArgumentsNotDefinedInRule = 

# Error_DefaultValueRuntimeErrorRule = I''m sorry, but the default value set for the argument ''{0}'' of the ''{1}'' task (referencing the ''{1}.yaml'' file located at ''{2}'') has an unavailable variable/method in the rule context: ''{3}''
Error_DefaultValueRuntimeErrorRule = 

# Error_FlagRuntimeErrorRule = I''m sorry, but the flag set for the argument ''{0}'' of the ''{1}'' task (referencing the ''{1}.yaml'' file located at ''{2}'') has an unavailable variable/method in the rule context: ''{3}''
Error_FlagRuntimeErrorRule = 

# Error_DuplicatedCommandElementsRule = Uh-oh, both ''command'' and ''commands'' fields are set in the ''{0}'' task (referencing the ''{0}.yaml'' file located at ''{1}''). You need to pick only one of them. If your task only relies on a single command, you can opt for ''command''; if your rule requires a set of commands, maybe the ''commands'' field is more suitable.
Error_DuplicatedCommandElementsRule = 

# Error_MissingCommandElementsRule = Uh-oh, the ''{0}'' task (referencing the ''{0}.yaml'' file located at ''{1}'') does not have either the ''command'' or ''commands'' elements. You need to pick only one of them. If your task only relies on a single command, you can opt for ''command''; if your rule requires a set of commands, maybe the ''commands'' field is more suitable.
Error_MissingCommandElementsRule = 

# Error_CommandRuntimeErrorRule = I''m sorry, but the command set for the ''{0}'' task (referencing the ''{0}.yaml'' file located at ''{1}'') has an unavailable variable/method in the rule context: ''{2}''
Error_CommandRuntimeErrorRule = 

# Error_XMLFileNotFound = I''m sorry, but I could not find ''{0}'' in the current directory.
Error_XMLFileNotFound =

# Error_XMLBadEncoding = I''m sorry, but apparently ''{0}'' has a bad encoding. Delete the file and try again.
Error_XMLBadEncoding =

# Error_XMLMalformedFile = I''m sorry, but ''{0}'' seems to be malformed. Delete the file and try again.
Error_XMLMalformedFile =

# Error_XMLAccess = I''m sorry, but I could not access ''{0}''. Please check the directory permissions and try again.
Error_XMLAccess =

# Error_ConditionalNotBoolean = I'm sorry, but the following conditional does not resolve to a boolean value. Please rewrite it and try again:
Error_ConditionalNotBoolean =

# Error_ConditionalRuntimeError = I''m sorry, but one of the conditionals has an unavailable variable in the evaluation context: ''{0}''
Error_ConditionalRuntimeError =
